#!/usr/bin/env bash
#=========================================================================
# FILE: common.bash
# DESC: bash completions for common commands and builtins
# LAST: 2017-09-06
#=========================================================================


#COMP_CVS_REMOTE
#Access remotely checked-out files over passwordless ssh for CVS. 
#This variable just needs to exists, value is not important, though usually it is COMP_CVS_REMOTE=1

#COMP_CONFIGURE_HINTS
#Avoid stripping description in --option=description of './configure --help'

#COMP_TAR_INTERNAL_PATHS
#Avoid flattening internal contents of tar files



#COMP_CWORD
#COMP_KEY
#COMP_LINE
#COMP_POINT
#COMP_TYPE
#COMP_WORDBREAKS
#COMP_WORDS
#COMPREPLY
#FIGNORE
#EXECIGNORE
#HOSTFILE


#COMP_WORDBREAKS
#The set of characters that the readline library treats as word separators when performing word completion. E.g.:  "'><=;|&(:
#If COMP_WORDBREAKS is unset, it loses its special properties, even if it is subsequently reset.

#COMP_WORDS
#An array variable consisting of the individual words in the current command line. 
#The line is split into words as readline would split it, using COMP_WORDBREAKS as described above. 
#This variable is available only in shell functions invoked by the programmable completion facilities.

#COMP_CWORD
#An index into $COMP_WORDS of the word containing the current cursor position. This variable
#is available only in shell functions invoked by the programmable completion facilities.

#COMP_KEY
#The key (or final key of a key sequence) used to invoke the current completion function.

#COMP_LINE
#The current command line. This variable is available only in shell functions 
#and external commands invoked by the programmable completion facilities.

#COMP_POINT
#The index of the current cursor position relative to the beginning of the current command. 
#If the current cursor position is at the end of the current command, the value of this variable is equal to ${#COMP_LINE}. 
#This variable is available only in shell functions and external commands invoked by the programmable completion facilities.

#COMP_TYPE
#Set to an integer value corresponding to the type of completion 
#attempted that caused a completion function to be called:
#TAB  for normal completion
#?    for listing completions after successive tabs
#!    for listing alternatives on partial word completion
#@    for listing completions if the word is not unmodified
#%    for menu completion 
#This variable is available only in shell functions and external 
#commands invoked by the programmable completion facilities.

#COMPREPLY
#An array variable from which bash reads the possible completions generated by a shell function 
#invoked by the programmable completion facility. Each array element contains one possible completion.




#FIGNORE
#A colon-separated list of suffixes to ignore when performing filename completion. 
#A filename whose suffix matches one of the entries in FIGNORE is excluded from the 
#list of matched filenames. A sample value is .o:~

#EXECIGNORE
#A colon-separated list of extended glob patterns.
#Files with full paths matching one of these patterns are not considered executable for 
#the purposes of completion and PATH searching, but the [, [[, and test builtins are not affected. 
#Use this variable to deal with systems that set the executable bit on files that are not actually executable.

#HOSTFILE
#Contains the name of a file in the same format as /etc/hosts 
#that should be read when the shell needs to complete a hostname. 
#* The list of possible hostname completions may be changed while the shell is running; 
#  the next time hostname completion is attempted after the value is changed, 
#  bash adds the contents of the new file to the existing list. 
#* If HOSTFILE is set, but has no value, or does not name a readable file, 
#  bash attempts to read /etc/hosts to obtain the list of possible hostname completions. 
#* When HOSTFILE is unset, the hostname list is cleared.

